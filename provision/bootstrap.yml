---
# Bootstrap a AWS ec2 controller for AIP related playbooks.
#
# This is an optional step. All playbooks can be run from 
# the operator box.
#
# Running inside AWS is faster though.
#
- hosts: localhost:&bootstrap
  connection: local
  vars_files:
    - vars/aws-defaults.yml

  vars:
    id_rsa_pub: '{{private_key}}.pub'

  tasks:
    - name: Create insubnet sec group
      ec2_group:
        name: aip_default 
        description: Allow in group and ssh communication
        rules:
          - proto: all
            group_name: aip_default
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0

    - name: Create key pair
      ec2_key:
        name: 'key_{{ansible_user_id}}'
        key_material: "{{ lookup('file', '{{ id_rsa_pub }}') }}"

    - name: Bootstrap AWS controller
      tags:
        - aipawscontroller
      ec2:
        key_name: 'key_{{ansible_user_id}}'
        instance_type: t2.nano
        vpc_subnet_id: '{{vpc_subnet_id}}'
        image: '{{ debian_ami_id }}'
        wait: true
        groups:
          - aip_default
        private_ip: '{{aip_aws_controller_ip}}'
        instance_tags:
          Stage: expand
          Name: aip_aws_controller
          Groups: aip_aws_controller_hosts
      when: "aip_aws_controller_ip not in (hostvars.values()|map(attribute='private_ip_address')|list|string)"

- hosts: aip_aws_controller_hosts
  name: AIP Aws controller node
  remote_user: admin
  gather_facts: no

  vars:
    ansible_ssh_private_key_file: '{{ private_key }}'
    ansible_ssh_extra_args: -o StrictHostKeyChecking=no

  pre_tasks:
    - name: Wait for SSH to come up
      wait_for_connection:
        timeout: 320

    - name: Gather facts for the first time
      setup:

    - name: Create a 2048-bit SSH key for user admin
      user:
        name: admin
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

    - name: Install pip
      become: yes
      apt:
        name: python-pip

    - name: Install git
      become: yes
      apt:
        name: git

    - name: Install rsync
      become: yes
      apt:
        name: rsync

    - name: Copy ansible files
      tags:
        - sync
      become: yes
      synchronize:
        src: ../../
        dest: /var/lib/aipond
        
    - name: Install pip libraries
      become: yes
      pip:
        name:
          - requests==2.21.0
          - ansible
          - pywinrm
          - botocore
          - boto3

    - name: Install ansible-requirements
      become: yes
      shell: ansible-galaxy install --role-file=provision/requirements.yml --roles-path=/etc/ansible/roles
      args:
        chdir: /var/lib/aipond

  post_tasks:
    - name: Tag stage as init
      delegate_to: localhost
      vars:
        ansible_connection: local
      ec2_tag:
        resource: '{{instance_id}}'
        tags:
          Stage: init

