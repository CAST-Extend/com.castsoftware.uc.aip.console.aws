---
# Bootstrap a AWS ec2 controller for AIP related playbooks.
#
# This is an optional step. All playbooks can be run from 
# the operator box.
#
# Running inside AWS is faster though.
#
- hosts: localhost:&bootstrap
  connection: local
  vars_files:
    - vars/aws-defaults.yml

  tasks:
    - name: Create insubnet sec group
      ec2_group:
        name: aip_default 
        description: Allow in group and ssh communication
        rules:
          - proto: all
            group_name: aip_default
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0

    - name: Create key pair
      ec2_key:
        name: aip_controller_key
        key_material: "{{ lookup('file', '{{ public_key }}') }}"

    - name: Bootstrap AWS controller
      tags:
        - aipawscontroller
      ec2:
        instance_profile_name: "{{instance_profile_name}}"
        key_name: aip_controller_key
        instance_type: t2.nano
        vpc_subnet_id: '{{vpc_subnet_id}}'
        image: '{{ debian_ami_id }}'
        wait: true
        groups:
          - aip_default
        private_ip: '{{aip_aws_controller_ip}}'
        instance_tags:
          Stage: expand
          Name: aip_aws_controller
          Groups: aip_aws_controller_hosts
      when: "aip_aws_controller_ip not in (hostvars.values()|map(attribute='private_ip_address')|list|string)"

- hosts: aip_aws_controller_hosts
  name: AIP Aws controller node
  remote_user: admin
  gather_facts: no

  vars:
    ansible_ssh_extra_args: -o StrictHostKeyChecking=no
    aipond_dir: "/home/admin"
    home: "{{ lookup('env', 'HOME') }}"

  tasks:
    - name: Wait for SSH to come up
      wait_for_connection:
        timeout: 320

    - name: Gather facts for the first time
      setup:

    - name: Install pip
      become: yes
      apt:
        name: python-pip

    - name: Install git
      become: yes
      apt:
        name: git

    - name: Install rsync
      become: yes
      apt:
        name: rsync

    - name: Copy ansible files
      block:
      - name: Sync ansible files
        become: yes
        synchronize:
          src: ../../
          dest: "{{aipond_dir}}"

      - name: Copy dot files
        copy:
          src: "{{ home }}/.aip-aws"
          dest: "~/.aip-aws"

      - name: Copy aws region dot file
        copy:
          src: "{{ home }}/.aws-region"
          dest: "~/.aws-region"
        
      tags:
        - sync
        
    - name: Install pip libraries
      become: yes
      pip:
        name:
          - requests==2.21.0
          - ansible
          - pywinrm
          - botocore
          - boto3

    - name: Install ansible-requirements
      become: yes
      shell: "ansible-galaxy install --role-file={{aipond_dir}}/provision/requirements.yml --roles-path=/etc/ansible/roles"

    - name: Tag stage as init
      delegate_to: localhost
      vars:
        ansible_connection: local
      ec2_tag:
        resource: "{{instance_id}}"
        tags:
          Stage: init


