---
# Enhanced install of CAIP from the bake release image:
#  - AIPConsole node install
#  - CAIP flat patch is any
#
# often overridden variables:
# - cast_aip_install_dir: directory of CAIP install 
# - cast_aip_s3_bucket: s3 bucket where release is stored
# - cast_aip_console_zip: release console zip (also the s3 object key)
# - cast_flat_aip_zip: the flat zip file (also a s3 object key). If defined the flat is installed.


# In case there is a patch to apply on the release
- name: Get caip flat from s3
  import_role:
    name: presign_then_get_s3_url
  vars:
    bucket: "{{cast_aip_s3_bucket}}" 
    object: "{{cast_flat_aip_zip}}"
    dest: C:\CAST_FLAT_AIP.zip
  when: cast_flat_aip_zip is defined

# The cast_aip_install_dir has been set accordinlgy
- name: Unzip caip flat to caip install
  win_command: '7z x C:\CAST_FLAT_AIP.zip -y'
  args:
      chdir: C:\
  when: cast_flat_aip_zip is defined
  
- name: Get aip console node installer from s3
  import_role:
    name: presign_then_get_s3_url
  vars:
    bucket: "{{cast_aip_s3_bucket}}" 
    object: "{{cast_aip_console_zip}}"
    dest: C:\aip_console.zip

- name: Unzip aip console zip 
  win_command: '7z x C:\aip_console.zip -y -oC:\CAST_AIP_CONSOLE'
  args:
      chdir: C:\
      creates: C:\CAST_AIP_CONSOLE\

# Configure the installer
- name: Configure aip rest api install
  win_template:
      dest: C:\AIPConsole.defaults
      src: AIPConsole.defaults.j2
  notify: Restart aip node

# Install the node
- name: Install aip rest api node
  win_command: java -jar C:\CAST_AIP_CONSOLE\{{cast_aip_console_jar}} -defaults-file AIPConsole.defaults -auto
  args:
      chdir: C:\

# Create required directories
- name: Create Upload dir
  win_file:
      path: "{{cast_ms_upload_dir}}"
      state: directory

- name: Create delivery directory
  win_file: 
      path: "{{cast_ms_delivery_dir}}"
      state: directory

- name: Create deploy directory
  win_file: 
      path: "{{cast_ms_deploy_dir}}"
      state: directory

# Fetch the properties file for this node
# Used to grab the token
- name: Fetch node property file
  tags:
      - aip_node_properties
  fetch:
      src: '{{cast_webi_install_dir}}\AipNode\data\aip-node-app.properties'
      dest: "aip-nodes/{{private_ip_address}}/"
      flat: yes

- name: Install filebeat
  block:
    - win_chocolatey: name=filebeat

    - win_service:
        name: filebeat
        state: stopped

    - win_template:
        dest: C:\ProgramData\chocolatey\lib\filebeat\tools\filebeat.yml
        src: filebeat.yml.j2

    - win_service:
        name: filebeat
        state: restarted

  when: logcollector_host is defined

